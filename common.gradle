buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'net.researchgate:gradle-release:2.8.0' // release plugin
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'maven-publish'
//apply plugin: 'net.researchgate.release'

if (!project.plugins.findPlugin(net.researchgate.release.ReleasePlugin))
    project.apply(plugin: net.researchgate.release.ReleasePlugin)

ext {
    // http://127.0.0.1:9998/nexus/content/repositories/releases
//    localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
//    localMavenRepo = 'http://192.168.2.97:18882/repository/maven-releases/'
    if (project.version.endsWith('-SNAPSHOT')) {
        localMavenRepo = "http://192.168.2.97:18882/repository/maven-snapshots/"
    } else {
        localMavenRepo = "http://192.168.2.97:18882/repository/maven-releases/"
    }
    maven_username = 'admin'
    maven_password = 'admin123'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

//javadoc
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

//upload war | jar to nexus
uploadArchives {
    repositories {
        mavenLocal()
        mavenDeployer {
            repository(url: localMavenRepo) {
                authentication(userName: "${maven_username}", password: "${maven_password}")
            }
            //构造项目的Pom文件
            pom.project {
                name = project.name
                packaging = 'jar'
                description = 'description'
            }
            pom.version = "${project.version}"
            pom.artifactId = "${project.name}"
            pom.groupId = "${project.group}"
        }
    }
}

//config release runner
release {
    tagCommitMessage = "[Gradle Release Plugin] - creating tag: "
    scmAdapters = [
            net.researchgate.release.GitAdapter,
    ]
}

//当需要 relase Task 之前执行 upload 操作时配置依赖
afterReleaseBuild.dependsOn uploadArchives

publishing {
    publications {
        maven(MavenPublication) {
            //指定group/artifact/version信息
            groupId = "${project.group}"
            artifactId = "${project.name}"
            version = "${project.version}"
            //打包类型 war: components.web jar: components.java
            from components.java

            //配置上传源码
            artifact sourcesJar {
                classifier "sources"
            }

        }
    }
    repositories {
        maven {
            //指定要上传的maven私服仓库
            url = "${localMavenRepo}"
            //认证用户和密码
            credentials {
                username "${maven_username}"
                password "${maven_password}"
            }
        }
    }
}